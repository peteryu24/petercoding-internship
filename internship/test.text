추상 클래스는 그 추상클래스를 상속받아서 기능을 구현하고 확장 abstrect

인터페이스는 해당 메소드의 구현을 강제 interface 
interface extends interface
class implements interface

<overloading>
메소드의 이름이 같고, 매개변수의 개수나 타입이 달라야함
리턴 값만 다른 것은 오버로딩 불가능

<overriding>
부모 클래스의 메소드를 재정의하는 것.
버라이딩하고자 하는 메소드의 이름, 매개변수, 리턴 값이 모두 같아야 한다
접근제어자를 부모 메소드보다 좁게 설정할 수 없다.
예외를 부모 메소드보다 많이 선언할 수 없다
static을 인스턴스로 또는 그 반대로 설정 불가




업캐스팅 다운캐스팅
스태틱맴버 인스턴스맴버
싱글톤

추상클래스를 상속한 자식클래스에서 추상클래스의 객체선언
// 추상 클래스 정의
abstract class Animal {
    abstract void makeSound();
}

// 추상 클래스를 상속한 자식 클래스
class Dog extends Animal {
    @Override
    void makeSound() {
        System.out.println("멍멍!");
    }
}

public class Main {
    public static void main(String[] args) {
        // 추상 클래스 객체를 선언하고 자식 클래스의 인스턴스를 할당
        Animal myDog = new Dog();
        
        // 추상 메서드 호출
        myDog.makeSound(); // 출력: 멍멍!
    }
}



